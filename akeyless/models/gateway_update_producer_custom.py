# coding: utf-8

"""
    Akeyless API

    The purpose of this application is to provide access to Akeyless API.

    The version of the OpenAPI document: 2.0
    Contact: support@akeyless.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from typing import Optional, Set
from typing_extensions import Self

class GatewayUpdateProducerCustom(BaseModel):
    """
    gatewayUpdateProducerCustom is a command that updates a custom producer. [Deprecated: Use dynamic-secret-update-custom command]
    """ # noqa: E501
    admin_rotation_interval_days: Optional[StrictInt] = Field(default=None, description="Define rotation interval in days", alias="admin-rotation-interval-days")
    create_sync_url: StrictStr = Field(description="URL of an endpoint that implements /sync/create method, for example https://webhook.example.com/sync/create", alias="create-sync-url")
    delete_protection: Optional[StrictStr] = Field(default=None, description="Protection from accidental deletion of this object [true/false]")
    enable_admin_rotation: Optional[StrictBool] = Field(default=False, description="Should admin credentials be rotated", alias="enable-admin-rotation")
    var_json: Optional[StrictBool] = Field(default=False, description="Set output format to JSON", alias="json")
    name: StrictStr = Field(description="Dynamic secret name")
    new_name: Optional[StrictStr] = Field(default=None, description="Dynamic secret name", alias="new-name")
    payload: Optional[StrictStr] = Field(default=None, description="Secret payload to be sent with each create/revoke webhook request")
    producer_encryption_key_name: Optional[StrictStr] = Field(default=None, description="Dynamic producer encryption key", alias="producer-encryption-key-name")
    revoke_sync_url: StrictStr = Field(description="URL of an endpoint that implements /sync/revoke method, for example https://webhook.example.com/sync/revoke", alias="revoke-sync-url")
    rotate_sync_url: Optional[StrictStr] = Field(default=None, description="URL of an endpoint that implements /sync/rotate method, for example https://webhook.example.com/sync/rotate", alias="rotate-sync-url")
    tags: Optional[List[StrictStr]] = Field(default=None, description="Add tags attached to this object")
    timeout_sec: Optional[StrictInt] = Field(default=60, description="Maximum allowed time in seconds for the webhook to return the results", alias="timeout-sec")
    token: Optional[StrictStr] = Field(default=None, description="Authentication token (see `/auth` and `/configure`)")
    uid_token: Optional[StrictStr] = Field(default=None, description="The universal identity token, Required only for universal_identity authentication", alias="uid-token")
    user_ttl: Optional[StrictStr] = Field(default='60m', description="User TTL", alias="user-ttl")
    __properties: ClassVar[List[str]] = ["admin-rotation-interval-days", "create-sync-url", "delete_protection", "enable-admin-rotation", "json", "name", "new-name", "payload", "producer-encryption-key-name", "revoke-sync-url", "rotate-sync-url", "tags", "timeout-sec", "token", "uid-token", "user-ttl"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of GatewayUpdateProducerCustom from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of GatewayUpdateProducerCustom from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "admin-rotation-interval-days": obj.get("admin-rotation-interval-days"),
            "create-sync-url": obj.get("create-sync-url"),
            "delete_protection": obj.get("delete_protection"),
            "enable-admin-rotation": obj.get("enable-admin-rotation") if obj.get("enable-admin-rotation") is not None else False,
            "json": obj.get("json") if obj.get("json") is not None else False,
            "name": obj.get("name"),
            "new-name": obj.get("new-name"),
            "payload": obj.get("payload"),
            "producer-encryption-key-name": obj.get("producer-encryption-key-name"),
            "revoke-sync-url": obj.get("revoke-sync-url"),
            "rotate-sync-url": obj.get("rotate-sync-url"),
            "tags": obj.get("tags"),
            "timeout-sec": obj.get("timeout-sec") if obj.get("timeout-sec") is not None else 60,
            "token": obj.get("token"),
            "uid-token": obj.get("uid-token"),
            "user-ttl": obj.get("user-ttl") if obj.get("user-ttl") is not None else '60m'
        })
        return _obj


