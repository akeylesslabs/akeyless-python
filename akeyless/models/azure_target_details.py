# coding: utf-8

"""
    Akeyless API

    The purpose of this application is to provide access to Akeyless API.  # noqa: E501

    The version of the OpenAPI document: 2.0
    Contact: support@akeyless.io
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from akeyless.configuration import Configuration


class AzureTargetDetails(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'azure_client_id': 'str',
        'azure_client_secret': 'str',
        'azure_resource_group_name': 'str',
        'azure_resource_name': 'str',
        'azure_subscription_id': 'str',
        'azure_tenant_id': 'str',
        'use_gw_cloud_identity': 'bool'
    }

    attribute_map = {
        'azure_client_id': 'azure_client_id',
        'azure_client_secret': 'azure_client_secret',
        'azure_resource_group_name': 'azure_resource_group_name',
        'azure_resource_name': 'azure_resource_name',
        'azure_subscription_id': 'azure_subscription_id',
        'azure_tenant_id': 'azure_tenant_id',
        'use_gw_cloud_identity': 'use_gw_cloud_identity'
    }

    def __init__(self, azure_client_id=None, azure_client_secret=None, azure_resource_group_name=None, azure_resource_name=None, azure_subscription_id=None, azure_tenant_id=None, use_gw_cloud_identity=None, local_vars_configuration=None):  # noqa: E501
        """AzureTargetDetails - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._azure_client_id = None
        self._azure_client_secret = None
        self._azure_resource_group_name = None
        self._azure_resource_name = None
        self._azure_subscription_id = None
        self._azure_tenant_id = None
        self._use_gw_cloud_identity = None
        self.discriminator = None

        if azure_client_id is not None:
            self.azure_client_id = azure_client_id
        if azure_client_secret is not None:
            self.azure_client_secret = azure_client_secret
        if azure_resource_group_name is not None:
            self.azure_resource_group_name = azure_resource_group_name
        if azure_resource_name is not None:
            self.azure_resource_name = azure_resource_name
        if azure_subscription_id is not None:
            self.azure_subscription_id = azure_subscription_id
        if azure_tenant_id is not None:
            self.azure_tenant_id = azure_tenant_id
        if use_gw_cloud_identity is not None:
            self.use_gw_cloud_identity = use_gw_cloud_identity

    @property
    def azure_client_id(self):
        """Gets the azure_client_id of this AzureTargetDetails.  # noqa: E501


        :return: The azure_client_id of this AzureTargetDetails.  # noqa: E501
        :rtype: str
        """
        return self._azure_client_id

    @azure_client_id.setter
    def azure_client_id(self, azure_client_id):
        """Sets the azure_client_id of this AzureTargetDetails.


        :param azure_client_id: The azure_client_id of this AzureTargetDetails.  # noqa: E501
        :type: str
        """

        self._azure_client_id = azure_client_id

    @property
    def azure_client_secret(self):
        """Gets the azure_client_secret of this AzureTargetDetails.  # noqa: E501


        :return: The azure_client_secret of this AzureTargetDetails.  # noqa: E501
        :rtype: str
        """
        return self._azure_client_secret

    @azure_client_secret.setter
    def azure_client_secret(self, azure_client_secret):
        """Sets the azure_client_secret of this AzureTargetDetails.


        :param azure_client_secret: The azure_client_secret of this AzureTargetDetails.  # noqa: E501
        :type: str
        """

        self._azure_client_secret = azure_client_secret

    @property
    def azure_resource_group_name(self):
        """Gets the azure_resource_group_name of this AzureTargetDetails.  # noqa: E501


        :return: The azure_resource_group_name of this AzureTargetDetails.  # noqa: E501
        :rtype: str
        """
        return self._azure_resource_group_name

    @azure_resource_group_name.setter
    def azure_resource_group_name(self, azure_resource_group_name):
        """Sets the azure_resource_group_name of this AzureTargetDetails.


        :param azure_resource_group_name: The azure_resource_group_name of this AzureTargetDetails.  # noqa: E501
        :type: str
        """

        self._azure_resource_group_name = azure_resource_group_name

    @property
    def azure_resource_name(self):
        """Gets the azure_resource_name of this AzureTargetDetails.  # noqa: E501


        :return: The azure_resource_name of this AzureTargetDetails.  # noqa: E501
        :rtype: str
        """
        return self._azure_resource_name

    @azure_resource_name.setter
    def azure_resource_name(self, azure_resource_name):
        """Sets the azure_resource_name of this AzureTargetDetails.


        :param azure_resource_name: The azure_resource_name of this AzureTargetDetails.  # noqa: E501
        :type: str
        """

        self._azure_resource_name = azure_resource_name

    @property
    def azure_subscription_id(self):
        """Gets the azure_subscription_id of this AzureTargetDetails.  # noqa: E501


        :return: The azure_subscription_id of this AzureTargetDetails.  # noqa: E501
        :rtype: str
        """
        return self._azure_subscription_id

    @azure_subscription_id.setter
    def azure_subscription_id(self, azure_subscription_id):
        """Sets the azure_subscription_id of this AzureTargetDetails.


        :param azure_subscription_id: The azure_subscription_id of this AzureTargetDetails.  # noqa: E501
        :type: str
        """

        self._azure_subscription_id = azure_subscription_id

    @property
    def azure_tenant_id(self):
        """Gets the azure_tenant_id of this AzureTargetDetails.  # noqa: E501


        :return: The azure_tenant_id of this AzureTargetDetails.  # noqa: E501
        :rtype: str
        """
        return self._azure_tenant_id

    @azure_tenant_id.setter
    def azure_tenant_id(self, azure_tenant_id):
        """Sets the azure_tenant_id of this AzureTargetDetails.


        :param azure_tenant_id: The azure_tenant_id of this AzureTargetDetails.  # noqa: E501
        :type: str
        """

        self._azure_tenant_id = azure_tenant_id

    @property
    def use_gw_cloud_identity(self):
        """Gets the use_gw_cloud_identity of this AzureTargetDetails.  # noqa: E501


        :return: The use_gw_cloud_identity of this AzureTargetDetails.  # noqa: E501
        :rtype: bool
        """
        return self._use_gw_cloud_identity

    @use_gw_cloud_identity.setter
    def use_gw_cloud_identity(self, use_gw_cloud_identity):
        """Sets the use_gw_cloud_identity of this AzureTargetDetails.


        :param use_gw_cloud_identity: The use_gw_cloud_identity of this AzureTargetDetails.  # noqa: E501
        :type: bool
        """

        self._use_gw_cloud_identity = use_gw_cloud_identity

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AzureTargetDetails):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AzureTargetDetails):
            return True

        return self.to_dict() != other.to_dict()
