# coding: utf-8

"""
    Akeyless API

    The purpose of this application is to provide access to Akeyless API.  # noqa: E501

    The version of the OpenAPI document: 2.0
    Contact: support@akeyless.io
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import akeyless
from akeyless.models.dynamic_secret_update_rdp import DynamicSecretUpdateRdp  # noqa: E501
from akeyless.rest import ApiException

class TestDynamicSecretUpdateRdp(unittest.TestCase):
    """DynamicSecretUpdateRdp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test DynamicSecretUpdateRdp
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = akeyless.models.dynamic_secret_update_rdp.DynamicSecretUpdateRdp()  # noqa: E501
        if include_optional :
            return DynamicSecretUpdateRdp(
                allow_user_extend_session = 56, 
                delete_protection = '0', 
                description = '0', 
                fixed_user_only = 'false', 
                json = True, 
                name = '0', 
                new_name = '0', 
                password_length = '0', 
                producer_encryption_key_name = '0', 
                rdp_admin_name = '0', 
                rdp_admin_pwd = '0', 
                rdp_host_name = '0', 
                rdp_host_port = '22', 
                rdp_user_groups = '0', 
                secure_access_allow_external_user = True, 
                secure_access_enable = '0', 
                secure_access_host = [
                    '0'
                    ], 
                secure_access_rd_gateway_server = '0', 
                secure_access_rdp_domain = '0', 
                secure_access_rdp_user = '0', 
                tags = [
                    '0'
                    ], 
                target_name = '0', 
                token = '0', 
                uid_token = '0', 
                user_ttl = '60m', 
                warn_user_before_expiration = 56
            )
        else :
            return DynamicSecretUpdateRdp(
                name = '0',
        )

    def testDynamicSecretUpdateRdp(self):
        """Test DynamicSecretUpdateRdp"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
