# coding: utf-8

"""
    Akeyless API

    The purpose of this application is to provide access to Akeyless API.  # noqa: E501

    The version of the OpenAPI document: 2.0
    Contact: support@akeyless.io
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import akeyless
from akeyless.models.classic_key_details_info import ClassicKeyDetailsInfo  # noqa: E501
from akeyless.rest import ApiException

class TestClassicKeyDetailsInfo(unittest.TestCase):
    """ClassicKeyDetailsInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ClassicKeyDetailsInfo
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = akeyless.models.classic_key_details_info.ClassicKeyDetailsInfo()  # noqa: E501
        if include_optional :
            return ClassicKeyDetailsInfo(
                classic_key_id = '0', 
                is_provided_by_user = True, 
                is_unexportable = True, 
                key_state = '0', 
                key_type = '0', 
                last_error = '0', 
                target_alias_helper = '0', 
                target_types = [
                    '0'
                    ], 
                targets = [
                    akeyless.models.classic_key_target_info.ClassicKeyTargetInfo(
                        external_kms_id = akeyless.models.external_kms_key_id.ExternalKMSKeyId(
                            key_id = '0', 
                            key_reference = '0', ), 
                        key_purpose = [
                            '0'
                            ], 
                        key_status = akeyless.models.classic_key_status_info.ClassicKeyStatusInfo(
                            error_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            last_error = '0', 
                            last_status = '0', 
                            version = 56, ), 
                        target_assoc_id = '0', 
                        target_type = '0', )
                    ]
            )
        else :
            return ClassicKeyDetailsInfo(
        )

    def testClassicKeyDetailsInfo(self):
        """Test ClassicKeyDetailsInfo"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
