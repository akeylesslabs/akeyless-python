# coding: utf-8

"""
    Akeyless API

    The purpose of this application is to provide access to Akeyless API.  # noqa: E501

    The version of the OpenAPI document: 2.0
    Contact: support@akeyless.io
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import akeyless
from akeyless.models.log_forwarding_config_part import LogForwardingConfigPart  # noqa: E501
from akeyless.rest import ApiException

class TestLogForwardingConfigPart(unittest.TestCase):
    """LogForwardingConfigPart unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test LogForwardingConfigPart
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = akeyless.models.log_forwarding_config_part.LogForwardingConfigPart()  # noqa: E501
        if include_optional :
            return LogForwardingConfigPart(
                elasticsearch_config = akeyless.models.elasticsearch_log_forwarding_config.ElasticsearchLogForwardingConfig(
                    elasticsearch_host = '0', 
                    elasticsearch_index = '0', 
                    elasticsearch_nodes = '0', ), 
                logan_enable = True, 
                logan_url = '0', 
                logstash_config = akeyless.models.logstash_log_forwarding_config.LogstashLogForwardingConfig(
                    logstash_dns = '0', 
                    logstash_protocol = '0', ), 
                logz_io_config = akeyless.models.logz_io_log_forwarding_config.LogzIoLogForwardingConfig(
                    target_logz_io_protocol = '0', 
                    target_logz_io_token = '0', ), 
                pull_interval_sec = '0', 
                splunk_config = akeyless.models.splunk_log_forwarding_config.SplunkLogForwardingConfig(
                    splunk_index = '0', 
                    splunk_source = '0', 
                    splunk_sourcetype = '0', 
                    splunk_token = '0', 
                    splunk_url = '0', ), 
                syslog_config = akeyless.models.syslog_log_forwarding_config.SyslogLogForwardingConfig(
                    syslog_host = '0', 
                    syslog_network = '0', 
                    syslog_target_tag = '0', ), 
                target_log_type = '0'
            )
        else :
            return LogForwardingConfigPart(
        )

    def testLogForwardingConfigPart(self):
        """Test LogForwardingConfigPart"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
