# coding: utf-8

"""
    Akeyless API

    The purpose of this application is to provide access to Akeyless API.  # noqa: E501

    The version of the OpenAPI document: 0.0.1
    Contact: support@akeyless.io
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import akeyless
from akeyless.models.list_roles_output import ListRolesOutput  # noqa: E501
from akeyless.rest import ApiException

class TestListRolesOutput(unittest.TestCase):
    """ListRolesOutput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ListRolesOutput
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = akeyless.models.list_roles_output.ListRolesOutput()  # noqa: E501
        if include_optional :
            return ListRolesOutput(
                next_page = '0', 
                roles = [
                    akeyless.models.role_includes_role_details/.Role includes role details.(
                        client_permissions = [
                            '0'
                            ], 
                        comment = '0', 
                        role_auth_methods_assoc = [
                            akeyless.models.role_auth_method_association.RoleAuthMethodAssociation(
                                assoc_id = '0', 
                                auth_method_access_id = '0', 
                                auth_method_name = '0', 
                                auth_method_sub_claims = {
                                    'key' : [
                                        '0'
                                        ]
                                    }, )
                            ], 
                        role_name = '0', 
                        rules = akeyless.models.rules_are_a_part_of_akeyless_rbac/.Rules are a part of AKEYLESS RBAC.(
                            admin = True, 
                            path_rules = [
                                akeyless.models.path_rule_is_a_single_rule_used_in_akeyless_rbac/.PathRule is a single rule used in AKEYLESS RBAC.(
                                    capabilities = [
                                        '0'
                                        ], 
                                    path = '0', 
                                    type = '0', )
                                ], ), )
                    ]
            )
        else :
            return ListRolesOutput(
        )

    def testListRolesOutput(self):
        """Test ListRolesOutput"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
