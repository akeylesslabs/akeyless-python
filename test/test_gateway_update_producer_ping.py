# coding: utf-8

"""
    Akeyless API

    The purpose of this application is to provide access to Akeyless API.  # noqa: E501

    The version of the OpenAPI document: 2.0
    Contact: support@akeyless.io
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import akeyless
from akeyless.models.gateway_update_producer_ping import GatewayUpdateProducerPing  # noqa: E501
from akeyless.rest import ApiException

class TestGatewayUpdateProducerPing(unittest.TestCase):
    """GatewayUpdateProducerPing unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test GatewayUpdateProducerPing
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = akeyless.models.gateway_update_producer_ping.GatewayUpdateProducerPing()  # noqa: E501
        if include_optional :
            return GatewayUpdateProducerPing(
                delete_protection = '0', 
                json = True, 
                name = '0', 
                new_name = '0', 
                ping_administrative_port = '9999', 
                ping_atm_id = '0', 
                ping_authorization_port = '9031', 
                ping_cert_subject_dn = '0', 
                ping_client_authentication_type = 'CLIENT_SECRET', 
                ping_enforce_replay_prevention = '0', 
                ping_grant_types = [
                    '0'
                    ], 
                ping_issuer_dn = '0', 
                ping_jwks = '0', 
                ping_jwks_url = '0', 
                ping_password = '0', 
                ping_privileged_user = '0', 
                ping_redirect_uris = [
                    '0'
                    ], 
                ping_restricted_scopes = [
                    '0'
                    ], 
                ping_signing_algo = '0', 
                ping_url = '0', 
                producer_encryption_key_name = '0', 
                tags = [
                    '0'
                    ], 
                target_name = '0', 
                token = '0', 
                uid_token = '0', 
                user_ttl = '60m'
            )
        else :
            return GatewayUpdateProducerPing(
                name = '0',
        )

    def testGatewayUpdateProducerPing(self):
        """Test GatewayUpdateProducerPing"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
