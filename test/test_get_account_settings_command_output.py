# coding: utf-8

"""
    Akeyless API

    The purpose of this application is to provide access to Akeyless API.  # noqa: E501

    The version of the OpenAPI document: 2.0
    Contact: support@akeyless.io
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import akeyless
from akeyless.models.get_account_settings_command_output import GetAccountSettingsCommandOutput  # noqa: E501
from akeyless.rest import ApiException

class TestGetAccountSettingsCommandOutput(unittest.TestCase):
    """GetAccountSettingsCommandOutput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test GetAccountSettingsCommandOutput
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = akeyless.models.get_account_settings_command_output.GetAccountSettingsCommandOutput()  # noqa: E501
        if include_optional :
            return GetAccountSettingsCommandOutput(
                account_id = '0', 
                address = akeyless.models.customer_full_address.CustomerFullAddress(
                    city = '0', 
                    country = '0', 
                    postal_code = '0', 
                    street = '0', ), 
                company_name = '0', 
                email = '0', 
                phone = '0', 
                secret_management = akeyless.models.sm_info.SmInfo(
                    package = '0', 
                    tier = '0', ), 
                secure_remote_access = akeyless.models.sra_info.SraInfo(
                    package = '0', 
                    tier = '0', 
                    user_type = '0', ), 
                system_access_creds_settings = akeyless.models.system_access_creds_settings.SystemAccessCredsSettings(
                    jwt_ttl_default = 56, 
                    jwt_ttl_maximum = 56, 
                    jwt_ttl_minimum = 56, )
            )
        else :
            return GetAccountSettingsCommandOutput(
        )

    def testGetAccountSettingsCommandOutput(self):
        """Test GetAccountSettingsCommandOutput"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
