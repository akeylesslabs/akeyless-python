# coding: utf-8

"""
    Akeyless API

    The purpose of this application is to provide access to Akeyless API.  # noqa: E501

    The version of the OpenAPI document: 2.0
    Contact: support@akeyless.io
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import akeyless
from akeyless.models.dynamic_secret_update_azure import DynamicSecretUpdateAzure  # noqa: E501
from akeyless.rest import ApiException

class TestDynamicSecretUpdateAzure(unittest.TestCase):
    """DynamicSecretUpdateAzure unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test DynamicSecretUpdateAzure
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = akeyless.models.dynamic_secret_update_azure.DynamicSecretUpdateAzure()  # noqa: E501
        if include_optional :
            return DynamicSecretUpdateAzure(
                app_obj_id = '0', 
                azure_client_id = '0', 
                azure_client_secret = '0', 
                azure_tenant_id = '0', 
                delete_protection = '0', 
                description = '0', 
                fixed_user_claim_keyname = 'false', 
                fixed_user_only = True, 
                json = True, 
                name = '0', 
                new_name = '0', 
                password_length = '0', 
                producer_encryption_key_name = '0', 
                secure_access_enable = '0', 
                secure_access_web = True, 
                secure_access_web_browsing = True, 
                secure_access_web_proxy = True, 
                tags = [
                    '0'
                    ], 
                target_name = '0', 
                token = '0', 
                uid_token = '0', 
                user_group_obj_id = '0', 
                user_portal_access = True, 
                user_principal_name = '0', 
                user_programmatic_access = True, 
                user_role_template_id = '0', 
                user_ttl = '60m'
            )
        else :
            return DynamicSecretUpdateAzure(
                name = '0',
        )

    def testDynamicSecretUpdateAzure(self):
        """Test DynamicSecretUpdateAzure"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
