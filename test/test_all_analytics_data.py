# coding: utf-8

"""
    Akeyless API

    The purpose of this application is to provide access to Akeyless API.  # noqa: E501

    The version of the OpenAPI document: 2.0
    Contact: support@akeyless.io
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import akeyless
from akeyless.models.all_analytics_data import AllAnalyticsData  # noqa: E501
from akeyless.rest import ApiException

class TestAllAnalyticsData(unittest.TestCase):
    """AllAnalyticsData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AllAnalyticsData
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = akeyless.models.all_analytics_data.AllAnalyticsData()  # noqa: E501
        if include_optional :
            return AllAnalyticsData(
                analytics_data = {
                    'key' : [
                        [
                            '0'
                            ]
                        ]
                    }, 
                certificates_expiry_data = akeyless.models.certificate_analytic_aggregation.CertificateAnalyticAggregation(
                    account_id = '0', 
                    ca_counts = {
                        'key' : 56
                        }, 
                    risk_counts = {
                        'key' : 56
                        }, ), 
                clients_usage_reports = {
                    'key' : akeyless.models.clients_usage_report.ClientsUsageReport(
                        account_id = '0', 
                        clients = [
                            akeyless.models.client_usage_info.ClientUsageInfo(
                                access_id = '0', 
                                access_type = '0', 
                                auth_method_name = '0', 
                                client_unique_id = '0', 
                                exceeded_clients = 56, )
                            ], 
                        product = '0', 
                        time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        total_clients = 56, )
                    }, 
                date_updated = 56, 
                usage_reports = {
                    'key' : akeyless.models.usage_report_summary.UsageReportSummary(
                        clients_by_auth_method_types = {
                            'key' : 56
                            }, 
                        product = '0', 
                        secrets_by_types = {
                            'key' : 56
                            }, 
                        time = 56, 
                        total_clients = 56, 
                        total_secrets = 56, )
                    }
            )
        else :
            return AllAnalyticsData(
        )

    def testAllAnalyticsData(self):
        """Test AllAnalyticsData"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
