# coding: utf-8

"""
    Akeyless API

    The purpose of this application is to provide access to Akeyless API.  # noqa: E501

    The version of the OpenAPI document: 2.0
    Contact: support@akeyless.io
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import akeyless
from akeyless.models.auth_method_additional_data import AuthMethodAdditionalData  # noqa: E501
from akeyless.rest import ApiException

class TestAuthMethodAdditionalData(unittest.TestCase):
    """AuthMethodAdditionalData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AuthMethodAdditionalData
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = akeyless.models.auth_method_additional_data.AuthMethodAdditionalData()  # noqa: E501
        if include_optional :
            return AuthMethodAdditionalData(
                kerberos_data = akeyless.models.kerberos_auth_method_info.KerberosAuthMethodInfo(
                    kerberos_keytab = '0', 
                    kerberos_krb5_conf = '0', 
                    ldap_anonymous_search = True, 
                    ldap_bind_dn = '0', 
                    ldap_bind_password = '0', 
                    ldap_certificate = '0', 
                    ldap_group_attr = '0', 
                    ldap_group_dn = '0', 
                    ldap_group_filter = '0', 
                    ldap_url_address = '0', 
                    ldap_user_attr = '0', 
                    ldap_user_dn = '0', )
            )
        else :
            return AuthMethodAdditionalData(
        )

    def testAuthMethodAdditionalData(self):
        """Test AuthMethodAdditionalData"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
