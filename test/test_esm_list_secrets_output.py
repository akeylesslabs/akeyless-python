# coding: utf-8

"""
    Akeyless API

    The purpose of this application is to provide access to Akeyless API.  # noqa: E501

    The version of the OpenAPI document: 2.0
    Contact: support@akeyless.io
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import akeyless
from akeyless.models.esm_list_secrets_output import EsmListSecretsOutput  # noqa: E501
from akeyless.rest import ApiException

class TestEsmListSecretsOutput(unittest.TestCase):
    """EsmListSecretsOutput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test EsmListSecretsOutput
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = akeyless.models.esm_list_secrets_output.EsmListSecretsOutput()  # noqa: E501
        if include_optional :
            return EsmListSecretsOutput(
                secrets_list = [
                    akeyless.models.secret_info.SecretInfo(
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        description = '0', 
                        expiration = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_retrieved = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        location = akeyless.models.location.location(), 
                        name = '0', 
                        secret_id = '0', 
                        status = True, 
                        tags = {
                            'key' : '0'
                            }, 
                        type = '0', )
                    ]
            )
        else :
            return EsmListSecretsOutput(
        )

    def testEsmListSecretsOutput(self):
        """Test EsmListSecretsOutput"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
