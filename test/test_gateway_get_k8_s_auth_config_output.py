# coding: utf-8

"""
    Akeyless API

    The purpose of this application is to provide access to Akeyless API.  # noqa: E501

    The version of the OpenAPI document: 2.0
    Contact: support@akeyless.io
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import akeyless
from akeyless.models.gateway_get_k8_s_auth_config_output import GatewayGetK8SAuthConfigOutput  # noqa: E501
from akeyless.rest import ApiException

class TestGatewayGetK8SAuthConfigOutput(unittest.TestCase):
    """GatewayGetK8SAuthConfigOutput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test GatewayGetK8SAuthConfigOutput
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = akeyless.models.gateway_get_k8_s_auth_config_output.GatewayGetK8SAuthConfigOutput()  # noqa: E501
        if include_optional :
            return GatewayGetK8SAuthConfigOutput(
                am_token_expiration = 56, 
                auth_method_access_id = '0', 
                auth_method_prv_key_pem = '0', 
                disable_iss_validation = True, 
                id = '0', 
                k8s_ca_cert = '0', 
                k8s_host = '0', 
                k8s_issuer = '0', 
                k8s_pub_keys_pem = [
                    '0'
                    ], 
                k8s_token_reviewer_jwt = '0', 
                name = '0', 
                protection_key = '0', 
                use_local_ca_jwt = True
            )
        else :
            return GatewayGetK8SAuthConfigOutput(
        )

    def testGatewayGetK8SAuthConfigOutput(self):
        """Test GatewayGetK8SAuthConfigOutput"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
